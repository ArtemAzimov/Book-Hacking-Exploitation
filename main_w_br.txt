#include <iostream>
#include <string>

#include "tinyexpr.h"

using std::string, std::cout, std::endl;

// 1, 3, 4, 6 = 24

char VALUE1 = '1';
char VALUE2 = '3';
char VALUE3 = '4';
char VALUE4 = '6';

char sign1;
char sign2;
char sign3;
char sign4;
char sign5;
char sign6;

char operator1;
char operator2;
char operator3;

char br1_o;
char br1_c;
char br2_o;
char br2_c;

char signs[] = {'-', '+'};
char operators[] = {'-', '+', '/', '*'};

int runCounter = 0;

void show(double value, string msg)
{
    cout << msg << value << endl;
}

void parser()
{
    runCounter++;
    char res[] = {sign1, br1_o, sign2, VALUE1, operator1, sign3, VALUE2, br1_c, operator2, sign4, br2_o, sign5, VALUE3, operator3, sign6, VALUE4, br2_c, '\0'};

    te_parser tep;
    double resultInt = tep.evaluate(res);

    if (resultInt == 24)
        show(resultInt, ".......VALUE IS FOUND: ");
    else show(resultInt, "");
}

void bracketsPlacer()
{
    br1_o = ' ';
    br1_c = ' ';
    br2_o = ' ';
    br2_c = ' ';
    parser();

    br1_o = '(';
    br1_c = ')';
    parser();

    br1_o = ' ';
    br1_c = ' ';
    br2_o = '(';
    br2_c = ')';
    parser();

    br1_o = '(';
    br1_c = ')';
    br2_o = '(';
    br2_c = ')';
    parser();
}

void creator()
{
    for (int i1 = 0; i1 < 2; i1++)
    {
        sign1 = signs[i1];
        for (int i2 = 0; i2 < 2; i2++)
        {
            sign2 = signs[i2];
            for (int i3 = 0; i3 < 4; i3++)
            {
                operator1 = operators[i3];
                for (int i4 = 0; i4 < 2; i4++)
                {
                    sign3 = signs[i4];
                    for (int i5 = 0; i5 < 4; i5++)
                    {
                        operator2 = operators[i5];
                        for (int i6 = 0; i6 < 2; i6++)
                        {
                            sign4 = signs[i6];
                            for (int i7 = 0; i7 < 2; i7++)
                            {
                                sign5 = signs[i7];
                                for (int i8 = 0; i8 < 4; i8++)
                                {
                                    operator3 = operators[i8];
                                    for (int i9 = 0; i9 < 2; i9++)
                                    {
                                        sign6 = signs[i9];
                                        bracketsPlacer();
                                    }
                                }
                            }      
                        }
                    }
                }
            }
        }
    }
}

int main()
{
    creator();
    cout << ".......Variants calculated: " << runCounter << endl;
}
